library(tidyverse)
library(ggthemes)
library(scales)
ev_data <- read_csv("train.csv") %>% as_tibble()
ev_data %>% filter(Make=='PORSCHE' | Make=='AUDI' | Make=='TESLA'  | Make=='BMW') -> lux_brands
ev_data %>% summarize(mean(`Electric Range`), median(`Electric Range`), min(`Electric Range`), max(`Electric Range`), sd(`Electric Range`))
ev_data %>% summarize(el_range.mean=mean(`Electric Range`), median(`Electric Range`), min(`Electric Range`), max(`Electric Range`), sd(`Electric Range`))
ev_data %>% summarize(el_range.mean=mean(`Electric Range`), el_range.median=median(`Electric Range`), el_range.min=min(`Electric Range`), el_range.max=max(`Electric Range`), el_range.sd=sd(`Electric Range`))
print_stats <- function(data, col_name){
data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
print_stats(ev_data,"Electric Range")
print_stats <- function(data, col_name){
col_name <- data[,which(colnames(data)==col_name)]
data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
print_stats(ev_data,"Electric Range")
print_stats <- function(data, col_name){
col_name <- as.numeric(data[,which(colnames(data)==col_name)])
data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
print_stats(ev_data,"Electric Range")
print_stats <- function(data, col_name){
col_name <- as.numeric(as.character(data[,which(colnames(data)==col_name)]))
data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
#colnames(ev_data)
print_stats(ev_data,"Electric Range")
print_stats <- function(data, col_name){
ev_data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
print_stats("Electric Range")
print_stats <- function(col_name){
ev_data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
#colnames(ev_data)
print_stats("Electric Range")
print_stats(`Electric Range`)
print_stats <- function(col_name){
col_name <- ev_data[,which(colnames(ev_data)==col_name)]
ev_data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
#colnames(ev_data)
print_stats(`Electric Range`)
print_stats <- function(col_name){
col_name <- ev_data[,which(colnames(ev_data)==col_name)]
ev_data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
#colnames(ev_data)
print_stats("Electric Range")
print_stats <- function(col_name){
col_name <- as.numeric(as.character(ev_data[,which(colnames(ev_data)==col_name)]))
ev_data %>%
summarize(mean(col_name), el_range.median=median(col_name), el_range.min=min(col_name), el_range.max=max(col_name), el_range.sd=sd(col_name))
}
#colnames(ev_data)
print_stats("Electric Range")
colnames(ev_data)
exp_price.summ_stat <- ev_data %>%
summarize(exp_price.mean=mean(`Expected Price ($1k)`), exp_price.median=median(`Expected Price ($1k)`), exp_price.min=min(`Expected Price ($1k)`), exp_price.max=max(`Expected Price ($1k)`), exp_price.sd=sd(`Expected Price ($1k)`))
exp_price.summ_stat
el_range.summ_stat
el_range.summ_stat <- ev_data %>%
summarize(el_range.mean=mean(`Electric Range`), el_range.median=median(`Electric Range`), el_range.min=min(`Electric Range`), el_range.max=max(`Electric Range`), el_range.sd=sd(`Electric Range`))
exp_price.summ_stat <- ev_data %>%
summarize(exp_price.mean=mean(`Expected Price ($1k)`), exp_price.median=median(`Expected Price ($1k)`), exp_price.min=min(`Expected Price ($1k)`), exp_price.max=max(`Expected Price ($1k)`), exp_price.sd=sd(`Expected Price ($1k)`))
el_range.summ_stat
exp_price.summ_stat
ev_data %>% mean(`Expected Price ($1k)`)
ev_data %>% mean(`Expected Price (\$1k)`)
ev_data %>% mean(`Expected Price ($1k)`)
exp_price.summ_stat <- ev_data %>%
summarize(exp_price.mean=mean(`Expected Price ($1k)`), exp_price.median=median(`Expected Price ($1k)`), exp_price.min=min(`Expected Price ($1k)`), exp_price.max=max(`Expected Price ($1k)`), exp_price.sd=sd(`Expected Price ($1k)`))
exp_price.summ_stat
ev_data$`Expected Price ($1k)`
mean(ev_data$`Expected Price ($1k)`)
median(ev_data$`Expected Price ($1k)`)
median(as.numeric(ev_data$`Expected Price ($1k)`))
ev_data %>%
summarize(exp_price.mean=mean(`Expected Price ($1k)`), exp_price.median=median(`Expected Price ($1k)`), exp_price.min=min(`Expected Price ($1k)`), exp_price.max=max(`Expected Price ($1k)`), exp_price.sd=sd(`Expected Price ($1k)`))
View(exp_price.summ_stat)
View(el_range.summ_stat)
View(exp_price.summ_stat)
head(ev_data$`Expected Price ($1k)`)
is.numeric(head(ev_data$`Expected Price ($1k)`))
mean(head(ev_data$`Expected Price ($1k)`))
mean(ev_data$`Expected Price ($1k)`)
mean(ev_data$'Expected Price ($1k)')
ev_data <- read_csv("train.csv") %>% as_tibble()
mean(ev_data$`Expected Price ($1k)`)
mean(ev_data$`Expected Price($1k)`)
mean(ev_data$`Expected Price ($1k)`)
print_stats <- function(x) {
print(paste("Min: ",as.character(min(x, na.rm = TRUE))))
print(paste("Max: ",as.character(max(x, na.rm = TRUE))))
print(paste("Median: ",as.character(median(x, na.rm = TRUE))))
print(paste("Standard Deviation: ",as.character(sd(x, na.rm = TRUE))))
print(paste("Mean: ",as.character(mean(x, na.rm = TRUE))))
print(paste("Interquartile Range",as.character(IQR(x, na.rm = TRUE))))
}
#Calculating the summary statistics for the expected price of electric vehicles
expected_price_summary_stats <- print_stats(ev_data$`Expected Price ($1k)`)
as.character(mean(ev_data$`Expected Price ($1k)`))
as.character(mean(ev_data$`Expected Price ($1k)`, na.rm = TRUE))
mean(ev_data$`Expected Price ($1k)`, na.rm = TRUE)
mean(ev_data$`Expected Price ($1k)`, na.rm = TRUE)
exp_price.summ_stat <- ev_data %>%
summarize(exp_price.mean=mean(`Expected Price ($1k)`, na.rm = TRUE), exp_price.median=median(`Expected Price ($1k)`, na.rm = TRUE), exp_price.min=min(`Expected Price ($1k)`, na.rm = TRUE), exp_price.max=max(`Expected Price ($1k)`, na.rm = TRUE), exp_price.sd=sd(`Expected Price ($1k)`, na.rm = TRUE))
exp_price.summ_stat
table(ev_data$`Electric Vehicle Type`)
prop.table(table(ev_data$`Electric Vehicle Type`))
table(ev_data$Make)
prop.table(table(ev_data$`Electric Utility`))
table(ev_data$County)
el_range.summ_stat <- ev_data %>%
summarize(el_range.mean=mean(`Electric Range`, na.rm = TRUE), el_range.median=median(`Electric Range`, na.rm = TRUE), el_range.min=min(`Electric Range`, na.rm = TRUE), el_range.max=max(`Electric Range`, na.rm = TRUE), el_range.sd=sd(`Electric Range`, na.rm = TRUE))
el_range_summary_stats <- print_stats(ev_data$`Electric Range`)
exp_price.summ_stat
ev_data %>%
count(`Electric Vehicle Type`) %>%
mutate(perc = n / nrow(ev_data)) -> ev_type_percent
ggplot(data=ev_type_percent, aes(x=`Electric Vehicle Type`, y=perc)) +
geom_bar(stat="identity") +
scale_x_discrete(name ="Electric Vehicle Type Breakdown") +
scale_y_continuous(name ="Percent")
ev_data %>%
count(`Electric Vehicle Type`) %>%
mutate(perc = n / nrow(ev_data)) -> ev_type_percent
ggplot(data=ev_type_percent, aes(x=`Electric Vehicle Type`, y=perc)) +
geom_bar(stat="identity") +
scale_x_discrete(name ="Electric Vehicle Type Breakdown") +
scale_y_continuous(name ="Percent") +
theme_dark()
ev_data %>%
count(`Electric Vehicle Type`) %>%
mutate(perc = n / nrow(ev_data)) -> ev_type_percent
ggplot(data=ev_type_percent, aes(x=`Electric Vehicle Type`, y=perc)) +
geom_bar(stat="identity") +
scale_x_discrete(name ="Electric Vehicle Type Breakdown") +
scale_y_continuous(name ="Percent") +
theme_economist()
ev_data %>%
count(`Electric Vehicle Type`) %>%
mutate(perc = n / nrow(ev_data)) -> ev_type_percent
ggplot(data=ev_type_percent, aes(x=`Electric Vehicle Type`, y=perc)) +
geom_bar(stat="identity") +
scale_x_discrete(name ="Electric Vehicle Type Breakdown") +
scale_y_continuous(name ="Percent") +
theme_economist()
# Plot the summary statistics of electric range and expected price using a boxplot
# Examine the two variables individually as well as their relationship using a scatter plot
ggplot(data=ev_data, aes(x=`Electric Range`)) +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Expected Price ($1k)`)) +
geom_boxplot(outlier.colour="blue", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Electric Range`, y=`Expected Price ($1k)`)) +
geom_point(outlier.colour="blue", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name="Electric range (miles)",breaks=seq(0,350,50)) +
scale_y_continuous(name="Expected price (thousands)",limits=c(0,200),breaks=seq(0,200,50))
ggplot(data=ev_data, aes(x=`Electric Range`)) +
geom_boxplot(outlier.colour="black", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Expected Price ($1k)`)) +
geom_boxplot(outlier.colour="blue", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Electric Range`, y=`Expected Price ($1k)`)) +
geom_point(outlier.colour="blue", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name="Electric range (miles)",breaks=seq(0,350,50)) +
scale_y_continuous(name="Expected price (thousands)",limits=c(0,200),breaks=seq(0,200,50))
ggplot(data=ev_data, aes(x=`Electric Range`)) +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_reverse() +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Electric Range`)) +
scale_x_reverse() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Electric Range`)) +
scale_y_reverse() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Electric Range`)) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Electric Range`)) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=factor(`Electric Range`))) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Electric Range`), group=`Electric Range`) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Electric Range`), width = 2) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Electric Range`), width = 0.5) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Electric Range`)) +
coord_flip() +
geom_boxplot(width = 0.5, outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Electric Range`)) +
coord_flip() +
geom_boxplot(width = 0.1, outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Electric Range`)) +
coord_flip() +
geom_boxplot(width = 1, outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Expected Price ($1k)`)) +
coord_flip() +
geom_boxplot(outlier.colour="blue", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme(axis.text.y = element_blank())
ggplot(data=ev_data, aes(x=`Expected Price ($1k)`)) +
coord_flip() +
geom_boxplot(outlier.colour="blue", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme_economist()
ggplot(data=lux_brands, aes(x=`Electric Range`), color=Make) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=lux_brands, aes(x=`Electric Range`)) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Electric Range`)) +
coord_flip() +
geom_boxplot(width = 1, outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=lux_brands, aes(x=`Electric Range`)) +
coord_flip() +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Electric range (miles)", breaks=seq(0,350,50))
ggplot(data=ev_data, aes(x=`Expected Price ($1k)`)) +
coord_flip() +
geom_boxplot(outlier.colour="blue", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme_economist()
ggplot(data=ev_data, aes(x=`Electric Range`, y=`Expected Price ($1k)`)) +
geom_point(outlier.colour="blue", outlier.shape=8,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name="Electric range (miles)",breaks=seq(0,350,50)) +
scale_y_continuous(name="Expected price (thousands)",limits=c(0,200),breaks=seq(0,200,50))
ggplot(data=lux_brands, aes(x=`Expected Price ($1k)`)) +
coord_flip() +
geom_boxplot(outlier.colour="blue", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme_economist()
ggplot(data=lux_brands, aes(x=`Expected Price ($1k)`)) +
coord_flip() +
geom_boxplot(outlier.colour="blue", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme(axis.text.x = element_blank()) +
theme_economist()
# Boxplot of the expected price of all EVs
ggplot(data=ev_data, aes(x=`Expected Price ($1k)`)) +
coord_flip() +
geom_boxplot(outlier.colour="blue", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme_economist()
# Boxplot of the Expected price of luxury brands
ggplot(data=lux_brands, aes(x=`Expected Price ($1k)`)) +
coord_flip() +
geom_boxplot(outlier.colour="blue", outlier.shape=8, horizontal=FALSE,
outlier.size=2, notch=FALSE) +
scale_x_continuous(name ="Expected price (thousands)", limits=c(0,300), breaks=seq(0,300,50)) +
theme_economist()
base <- ggplot(mpg2, aes(displ, hwy)) +
geom_blank() +
xlab(NULL) +
ylab(NULL)
base <- ggplot(ev_data, aes(`Electric Range`)) +
geom_blank() +
xlab(NULL) +
ylab(NULL)
base + facet_wrap(~Make, ncol = 3)
base <- ggplot(ev_data, aes(Make)) +
geom_blank() +
xlab(NULL) +
ylab(NULL)
base + facet_wrap(~`Electric Range`, ncol = 3)
base <- ggplot(lux_brands, aes(`Expected Price ($1k)`)) +
geom_blank() +
xlab(NULL) +
ylab(NULL)
base + facet_wrap(~Make, ncol = 3)
ggplot(lux_brands, aes(Make)) +
geom_histogram(binwidth = 20000) +
labs(title = "50th Percentile Earnings") +
theme_bw() +
facet_wrap(vars(`Electric Range`))
ggplot(lux_brands, aes(Make)) +
geom_histogram(binwidth = 20000, stat="count") +
labs(title = "50th Percentile Earnings") +
theme_bw() +
facet_wrap(vars(`Electric Range`))
ggplot(lux_brands, aes(`Electric Range`)) +
geom_histogram(binwidth = 20000, stat="count") +
labs(title = "50th Percentile Earnings") +
theme_bw() +
facet_wrap(vars(Make))
ggplot(lux_brands, aes(`Electric Range`)) +
geom_histogram(binwidth = 100, stat="count") +
labs(title = "50th Percentile Earnings") +
theme_bw() +
facet_wrap(vars(Make))
ggplot(lux_brands, aes(`Electric Range`)) +
geom_histogram(binwidth = 100, stat="count") +
scale_y_continuous(breaks=seq(0,3000,250))
labs(title = "50th Percentile Earnings") +
theme_bw() +
facet_wrap(vars(Make))
ggplot(lux_brands, aes(`Electric Range`)) +
geom_histogram(binwidth = 100, stat="count") +
labs(title = "50th Percentile Earnings") +
theme_bw() +
facet_wrap(vars(Make))
ggplot(lux_brands, aes(`Electric Range`)) +
geom_histogram(binwidth = 100, stat="count") +
labs(title = "Luxury brand electric range") +
theme_bw() +
facet_wrap(vars(Make))
ggplot(lux_brands, aes(`Expected Price ($1k)`)) +
geom_histogram(binwidth = 100, stat="count") +
labs(title = "Luxury brand electric range") +
theme_bw() +
facet_wrap(vars(Make))
ggplot(lux_brands, aes(`Expected Price ($1k)`)) +
geom_histogram(binwidth = 100) +
labs(title = "Luxury brand electric range") +
theme_bw() +
facet_wrap(vars(Make))
ggplot(lux_brands, aes(`Electric Range`)) +
geom_histogram(binwidth = 100, stat="count") +
labs(title = "Luxury brand electric range") +
theme_bw() +
facet_wrap(vars(Make))
ggplot(lux_brands, aes(`Expected Price ($1k)`)) +
geom_histogram(binwidth = 100) +
labs(title = "Luxury brand expected price") +
theme_bw() +
facet_wrap(vars(Make))
range.p1 <- lm(`Expected Price ($1k)`~`Electric Range`, data=evs_under_30k)
evs_under_30k <- ev_data %>% filter(State == 'WA' & `Expected Price ($1k)` < 30) %>% select(`ZIP Code`, Make, Model, `Electric Vehicle Type`, `Electric Range`, `Expected Price ($1k)`)
# Get stats for Teslas as a luxury brand
teslas <- ev_data %>% filter(Make == "TESLA") %>% select(`ZIP Code`, Make, Model, `Electric Vehicle Type`, `Electric Range`, `Expected Price ($1k)`)
range.p1 <- lm(`Expected Price ($1k)`~`Electric Range`, data=evs_under_30k)
summary(range.p1)
plot(evs_under_30k$`Electric Range`, evs_under_30k$`Expected Price ($1k)`)
abline(range.p1)
evs_under_30k %>%
ggplot(aes(`Electric Range`, `Expected Price ($1k)`)) +
geom_point()
pred <- predict(range.p1)
evs_under_30k %>% ggplot(mapping=aes(x=`Electric Range`)) +
geom_point(aes(y=`Expected Price ($1k)`)) +
geom_jitter(aes(y=pred), color="red")
range.lb <- lm(`Expected Price ($1k)`~`Electric Range`, data=lux_brands)
summary(range.lb)
plot(lux_brands$`Electric Range`, lux_brands$`Expected Price ($1k)`)
abline(range.lb)
lux_brands %>%
ggplot(aes(`Electric Range`, `Expected Price ($1k)`)) +
geom_point()
pred <- predict(range.lb)
lux_brands %>% ggplot(mapping=aes(x=`Electric Range`)) +
geom_point(aes(y=`Expected Price ($1k)`)) +
geom_jitter(aes(y=pred), color="red")
evs_rich_zips <- ev_data %>%
filter(City == "REDMOND" | City == 'SEATTLE' | City == 'BELLEVUE' | City == 'MEDINA') %>% #
select(`ZIP Code`, City, Make, Model, `Electric Vehicle Type`, `Electric Range`, `Expected Price ($1k)`)
range.p2 <- lm(`Expected Price ($1k)`~`Electric Range`, data=evs_rich_zips)
evs_rich_zips %>%
ggplot(aes(`Electric Range`, `Expected Price ($1k)`)) +
geom_point()
#Univariate barplot showing the tpye of EVs in Washington's most expensive cities
ggplot(data=evs_rich_zips, aes(x=`Electric Vehicle Type`)) +
geom_bar() +
theme_clean()
#Bivariate plot telling us which EV makes are present in each of the 4 wealthier cities
ggplot(data=evs_rich_zips, aes(x=City, y=Make)) +
geom_point()
#Bivariate plot giving an overview of the electric range of EVs in the high-end cities
ggplot(data=evs_rich_zips, aes(x=`Electric Range`,y=Make)) +
geom_point() +
scale_x_continuous(name="Electric range (miles)",breaks=seq(0,350,50))
ggplot(data=evs_rich_zips, aes(x=`Electric Vehicle Type`)) +
geom_bar() +
theme_economist()
#Bivariate plot telling us which EV makes are present in each of the 4 wealthier cities
ggplot(data=evs_rich_zips, aes(x=City, y=Make)) +
geom_point() +
theme_economist()
#Bivariate plot giving an overview of the electric range of EVs in the high-end cities
ggplot(data=evs_rich_zips, aes(x=`Electric Range`,y=Make)) +
geom_point() +
scale_x_continuous(name="Electric range (miles)",breaks=seq(0,350,50)) +
theme_economist()
ggplot(data=evs_rich_zips, aes(x=Make)) +
geom_bar() +
scale_x_continuous(name="Car make",breaks=seq(0,350,50)) +
theme_economist()
ggplot(data=evs_rich_zips, aes(x=Make)) +
geom_bar() +
scale_x_continuous(name="Car make",breaks=seq(0,350,50)) +
ggplot(data=evs_rich_zips, aes(x=Make)) +
geom_bar() +
scale_x_continuous(name="Car make",breaks=seq(0,350,50))
ggplot(data=evs_rich_zips, aes(x=Make)) +
geom_bar() +
theme_economist()
lux_rich_zips <- filter(evs_rich_zips, Make=='PORSCHE' | Make=='AUDI' | Make=='TESLA'  | Make=='BMW')
ggplot(data=lux_rich_zips, aes(x=Make)) +
geom_bar() +
theme_economist()
116/1315
1062/1315
137/1315
156/1695
171/1692
1368/1695
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/foreign-impacts.R")
rm(list=ls())
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/foreign-impacts.R")
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/foreign-impacts.R")
install.packages("cli")
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/cluster-plots.R")
ggpubr
install.packages("ggpubr")
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/cluster-plots.R")
install.packages("tidyverse")
install.packages("tidyverse")
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/cluster-plots.R")
installr
install.packages("installr")
updateR()
library(installr)
updateR()
library(installr)
updateR()
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/cluster-plots.R")
install.packages("cli", reinstall = TRUE)
install.packages("cli", reinstall = TRUE)
setwd("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts")
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/irf-plots.r", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/irf-plots.r", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/foreign-impacts.R", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/generate_cluster_plots.R", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/log_lik_plot.r", echo=TRUE)
plot(ll_plot)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/log_lik_plot.r", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/log_lik_plot.r", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/model_forecast_overlay.r", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/plot_forecast_30days.r", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/plot_model_predictions.r", echo=TRUE)
source("C:/Users/nasko/dev/nars/_REPOS/covid-analysis/bin/rscripts/plot_flights_heatmap.R", echo=TRUE)
